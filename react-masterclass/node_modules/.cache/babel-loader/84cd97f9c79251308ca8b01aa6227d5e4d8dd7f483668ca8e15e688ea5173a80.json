{"ast":null,"code":"var _jsxFileName = \"/Users/dazz6/Documents/study/react-masterclass/src/TypeScript.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// @types/... 대형 Github Repository로, 모든 유명한 npm 라이브러리를 가지고 있는 저장소\n// typescript에게 모든 정보를 알려 주기 위해 type definition (typescript에게 제공할 설명)을 만들어 제공\n// https://github.com/DefinitelyTyped/DefinitelyTyped\n\nexport default function TypeScript() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const onChange = e => {\n    // 이런 타입을 찾을 때 document 문서를 찾거나 구글링해야 함\n    // TypeScript는 onChange 함수가 InputElement에 의해서 실행될 것을 알게 됨\n    const {\n      currentTarget: {\n        value\n      }\n      /* target을 TypeScript에서는 currentTarget로 사용*/\n    } = e;\n    /* 위는 구조분해 할당으로, const value = e.currentTarget.value; 와 같은 의미임 */\n    setValue(value);\n  };\n  const onSubmit = e => {\n    // 어떤 이벤트인지 지정해 줌으로써 관련 이벤트 자동완성이 가능해짐\n    e.preventDefault();\n    console.log(\"hello \", value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TypeScript, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c = TypeScript;\nvar _c;\n$RefreshReg$(_c, \"TypeScript\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TypeScript","_s","value","setValue","onChange","e","currentTarget","onSubmit","preventDefault","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dazz6/Documents/study/react-masterclass/src/TypeScript.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport Circle from \"./Circle\";\n\n// @types/... 대형 Github Repository로, 모든 유명한 npm 라이브러리를 가지고 있는 저장소\n// typescript에게 모든 정보를 알려 주기 위해 type definition (typescript에게 제공할 설명)을 만들어 제공\n// https://github.com/DefinitelyTyped/DefinitelyTyped\n\nexport default function TypeScript() {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    // 이런 타입을 찾을 때 document 문서를 찾거나 구글링해야 함\n    // TypeScript는 onChange 함수가 InputElement에 의해서 실행될 것을 알게 됨\n    const {\n      currentTarget: { value },\n      /* target을 TypeScript에서는 currentTarget로 사용*/\n    } = e;\n    /* 위는 구조분해 할당으로, const value = e.currentTarget.value; 와 같은 의미임 */\n    setValue(value);\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    // 어떤 이벤트인지 지정해 줌으로써 관련 이벤트 자동완성이 가능해짐\n    e.preventDefault();\n    console.log(\"hello \", value);\n  };\n\n  return (\n    <div>\n      {/* \n      <Circle bgColor=\"teal\" borderColor=\"pink\"></Circle>\n       <Circle bgColor=\"tomato\" text=\"text value\"></Circle>\n       \n      <form onSubmit={onSubmit}>\n        <input\n          value={value}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"username\"\n        ></input>\n        <button>Log in</button>\n      </form>\n      */}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC;AACA;AACA;;AAEA,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMO,QAAQ,GAAIC,CAAoC,IAAK;IACzD;IACA;IACA,MAAM;MACJC,aAAa,EAAE;QAAEJ;MAAM;MACvB;IACF,CAAC,GAAGG,CAAC;IACL;IACAF,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,MAAMK,QAAQ,GAAIF,CAAmC,IAAK;IACxD;IACAA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEH,OAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAeK,CAAC;AAEV;AAACb,EAAA,CAtCuBD,UAAU;AAAAe,EAAA,GAAVf,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
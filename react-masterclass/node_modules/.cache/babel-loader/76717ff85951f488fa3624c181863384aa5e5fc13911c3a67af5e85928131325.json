{"ast":null,"code":"var _jsxFileName = \"/Users/dazz6/Documents/study/react-masterclass/src/routes/Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"src/api\";\nimport ApexCharts from \"react-apexcharts\";\n\n// https://apexcharts.com/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart({\n  coinId\n}) {\n  _s();\n  var _data$map, _data$map2;\n  // Chart function을 사용할 때 CharProps Object가 들어오면, 그 중 coinId를 사용\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  console.log(data);\n\n  // 제공하는 옵션은 공식 문서에서 확인 가능!\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexCharts, {\n      type: \"line\",\n      series: [{\n        name: \"price\",\n        data: (_data$map = data === null || data === void 0 ? void 0 : data.map(price => price.close)) !== null && _data$map !== void 0 ? _data$map : []\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 2\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisTicks: {\n            show: false\n          },\n          axisBorder: {\n            show: false\n          },\n          labels: {\n            show: false\n          },\n          categories: (_data$map2 = data === null || data === void 0 ? void 0 : data.map(price => new Date(price.time_close * 1000).toISOString())) !== null && _data$map2 !== void 0 ? _data$map2 : []\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"blue\"],\n            stops: [0, 100]\n          }\n        },\n        colors: [\"red\"],\n        tooltip: {\n          y: {\n            formatter: value => `${value.toFixed(3)}$`\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexCharts","jsxDEV","_jsxDEV","Chart","coinId","_s","_data$map","_data$map2","isLoading","data","console","log","children","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisTicks","axisBorder","labels","categories","Date","time_close","toISOString","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dazz6/Documents/study/react-masterclass/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"src/api\";\nimport ApexCharts from \"react-apexcharts\";\nimport { start } from \"repl\";\n// https://apexcharts.com/\n\ninterface CharProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: CharProps) {\n  // Chart function을 사용할 때 CharProps Object가 들어오면, 그 중 coinId를 사용\n\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n\n  console.log(data);\n\n  // 제공하는 옵션은 공식 문서에서 확인 가능!\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexCharts\n          type=\"line\"\n          series={[\n            { name: \"price\", data: data?.map((price) => price.close) ?? [] },\n          ]}\n          options={{\n            theme: { mode: \"dark\" },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: { show: false },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 2,\n            },\n            yaxis: { show: false },\n            xaxis: {\n              axisTicks: { show: false },\n              axisBorder: { show: false },\n              labels: { show: false },\n              categories:\n                data?.map((price) =>\n                  new Date(price.time_close * 1000).toISOString()\n                ) ?? [],\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"blue\"], stops: [0, 100] },\n            },\n            colors: [\"red\"],\n            tooltip: { y: { formatter: (value) => `${value.toFixed(3)}$` } },\n          }}\n        ></ApexCharts>\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,gBAAgB,QAAQ,SAAS;AAC1C,OAAOC,UAAU,MAAM,kBAAkB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAiBA,SAASC,KAAKA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,SAAA,EAAAC,UAAA;EACpC;;EAEA,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGX,QAAQ,CAAgB,CAAC,OAAO,EAAEM,MAAM,CAAC,EAAE,MACrEL,gBAAgB,CAACK,MAAM,CACzB,CAAC;EAEDM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;;EAEjB;EACA,oBACEP,OAAA;IAAAU,QAAA,EACGJ,SAAS,GACR,kBAAkB,gBAElBN,OAAA,CAACF,UAAU;MACTa,IAAI,EAAC,MAAM;MACXC,MAAM,EAAE,CACN;QAAEC,IAAI,EAAE,OAAO;QAAEN,IAAI,GAAAH,SAAA,GAAEG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC,cAAAZ,SAAA,cAAAA,SAAA,GAAI;MAAG,CAAC,CAChE;MACFa,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEC,IAAI,EAAE;QAAO,CAAC;QACvBC,KAAK,EAAE;UACLC,MAAM,EAAE,GAAG;UACXC,KAAK,EAAE,GAAG;UACVC,OAAO,EAAE;YAAEC,IAAI,EAAE;UAAM,CAAC;UACxBC,UAAU,EAAE;QACd,CAAC;QACDC,IAAI,EAAE;UAAEF,IAAI,EAAE;QAAM,CAAC;QACrBG,MAAM,EAAE;UACNC,KAAK,EAAE,QAAQ;UACfN,KAAK,EAAE;QACT,CAAC;QACDO,KAAK,EAAE;UAAEL,IAAI,EAAE;QAAM,CAAC;QACtBM,KAAK,EAAE;UACLC,SAAS,EAAE;YAAEP,IAAI,EAAE;UAAM,CAAC;UAC1BQ,UAAU,EAAE;YAAER,IAAI,EAAE;UAAM,CAAC;UAC3BS,MAAM,EAAE;YAAET,IAAI,EAAE;UAAM,CAAC;UACvBU,UAAU,GAAA7B,UAAA,GACRE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,GAAG,CAAEC,KAAK,IACd,IAAIoB,IAAI,CAACpB,KAAK,CAACqB,UAAU,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAChD,CAAC,cAAAhC,UAAA,cAAAA,UAAA,GAAI;QACT,CAAC;QACDiC,IAAI,EAAE;UACJ3B,IAAI,EAAE,UAAU;UAChB4B,QAAQ,EAAE;YAAEC,gBAAgB,EAAE,CAAC,MAAM,CAAC;YAAEC,KAAK,EAAE,CAAC,CAAC,EAAE,GAAG;UAAE;QAC1D,CAAC;QACDC,MAAM,EAAE,CAAC,KAAK,CAAC;QACfC,OAAO,EAAE;UAAEC,CAAC,EAAE;YAAEC,SAAS,EAAGC,KAAK,IAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;UAAI;QAAE;MACjE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChD,EAAA,CAtDQF,KAAK;EAAA,QAGgBL,QAAQ;AAAA;AAAAwD,EAAA,GAH7BnD,KAAK;AAwDd,eAAeA,KAAK;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
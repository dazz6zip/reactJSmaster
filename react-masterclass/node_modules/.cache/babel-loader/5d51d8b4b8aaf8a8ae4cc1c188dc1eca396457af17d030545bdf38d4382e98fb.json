{"ast":null,"code":"var _jsxFileName = \"/Users/dazz6/Documents/study/react-masterclass/src/routes/Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"src/api\";\nimport ApexCharts from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart({\n  coinId\n}) {\n  _s();\n  // Chart function을 사용할 때 CharProps Object가 들어오면, 그 중 coinId를 사용\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading chart...\" : /*#__PURE__*/_jsxDEV(ApexCharts, {\n      type: \"line\",\n      options: {\n        chart: {\n          height: 500,\n          width: 500\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexCharts","jsxDEV","_jsxDEV","Chart","coinId","_s","isLoading","data","console","log","children","type","options","chart","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dazz6/Documents/study/react-masterclass/src/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"src/api\";\nimport ApexCharts from \"react-apexcharts\";\n\ninterface CharProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\nfunction Chart({ coinId }: CharProps) {\n  // Chart function을 사용할 때 CharProps Object가 들어오면, 그 중 coinId를 사용\n\n  const { isLoading, data } = useQuery<IHistorical>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n\n  console.log(data);\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexCharts\n          type=\"line\"\n          options={{ chart: { height: 500, width: 500 } }}\n        ></ApexCharts>\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,gBAAgB,QAAQ,SAAS;AAC1C,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB1C,SAASC,KAAKA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACpC;;EAEA,MAAM;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGT,QAAQ,CAAc,CAAC,OAAO,EAAEM,MAAM,CAAC,EAAE,MACnEL,gBAAgB,CAACK,MAAM,CACzB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,oBACEL,OAAA;IAAAQ,QAAA,EACGJ,SAAS,GACR,kBAAkB,gBAElBJ,OAAA,CAACF,UAAU;MACTW,IAAI,EAAC,MAAM;MACXC,OAAO,EAAE;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE,GAAG;UAAEC,KAAK,EAAE;QAAI;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EACd;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CArBQF,KAAK;EAAA,QAGgBL,QAAQ;AAAA;AAAAsB,EAAA,GAH7BjB,KAAK;AAuBd,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
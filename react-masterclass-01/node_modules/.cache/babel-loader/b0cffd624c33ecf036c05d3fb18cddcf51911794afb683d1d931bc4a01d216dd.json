{"ast":null,"code":"var _jsxFileName = \"/Users/dazz6/Documents/study/react-masterclass/src/routes/Coins.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { fetchCoin } from \"src/api\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = Header;\nconst CoinsList = styled.ul``;\n_c3 = CoinsList;\nconst Coin = styled.li`\n  background-color: white;\n  color: ${props => props.theme.bgColor};\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    /* padding: 20px; */\n    transition: color 0.2s ease-in;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${props => props.theme.accentColor};\n    }\n  }\n`;\n_c4 = Coin;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${props => props.theme.accentColor};\n`;\n_c5 = Title;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n_c6 = Loader;\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\n// api가 가지고 오는 값도 interface 정의 필요\n_c7 = Img;\nfunction Coins() {\n  _s();\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []); // component가 실행될 때 딱 한 번 실행\n\n  const {\n    isLoading,\n    data\n  } = useQuery(\"allCoins\", fetchCoin);\n  // useQuery(고유식별자, fetcher function)\n  // 여기서 fetcher function은 반드시 promise를 반환해야 함\n  // 반환값 : isLoading, isError, data, error (정해진 이름)\n  // fetcher 함수가 데이터를 가져오는 동안 자동으로 isLoading 상태가 true로 설정되고, 완료되면 자동으로 반환된 JSON 데이터가 data에 저장됨!\n  // 데이터를 파괴하지 않고 캐시에 저장해 두는 특성이 있음\n\n  /*\n  ReactQuery 반환객체 주요 속성\n  isLoading: 데이터 fetch 중이면 true, 아니면 false\n  data: fetcher 함수가 성공적으로 반환한 데이터\n  isError: fetcher 함수가 실패했을 때 true\n  error: fetcher 함수가 반환한 에러 객체\n  isFetching: 백그라운드에서 데이터를 다시 가져오는 중인지 나타냄\n  */\n\n  console.log(isLoading);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"pompompurin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CoinsList, {\n      children: data === null || data === void 0 ? void 0 : data.slice(0, 100).map(coin => /*#__PURE__*/_jsxDEV(Coin, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: `/${coin.id}`,\n            state: {\n              name: coin.name\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Img, {\n            src: `https://cryptocurrencyliveprices.com/img/${coin.id}.png`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), coin.name, \" \\u2192\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Coins, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n_c8 = Coins;\nexport default Coins;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"CoinsList\");\n$RefreshReg$(_c4, \"Coin\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"Loader\");\n$RefreshReg$(_c7, \"Img\");\n$RefreshReg$(_c8, \"Coins\");","map":{"version":3,"names":["useQuery","Link","fetchCoin","styled","jsxDEV","_jsxDEV","Container","div","_c","Header","header","_c2","CoinsList","ul","_c3","Coin","li","props","theme","bgColor","accentColor","_c4","Title","h1","_c5","Loader","span","_c6","Img","img","_c7","Coins","_s","isLoading","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","coin","to","pathname","id","state","name","src","_c8","$RefreshReg$"],"sources":["/Users/dazz6/Documents/study/react-masterclass/src/routes/Coins.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { fetchCoin } from \"src/api\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  padding: 20px;\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    /* padding: 20px; */\n    transition: color 0.2s ease-in;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\n// api가 가지고 오는 값도 interface 정의 필요\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active?: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //   })();\n  // }, []); // component가 실행될 때 딱 한 번 실행\n\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoin);\n  // useQuery(고유식별자, fetcher function)\n  // 여기서 fetcher function은 반드시 promise를 반환해야 함\n  // 반환값 : isLoading, isError, data, error (정해진 이름)\n  // fetcher 함수가 데이터를 가져오는 동안 자동으로 isLoading 상태가 true로 설정되고, 완료되면 자동으로 반환된 JSON 데이터가 data에 저장됨!\n  // 데이터를 파괴하지 않고 캐시에 저장해 두는 특성이 있음\n\n  /*\n  ReactQuery 반환객체 주요 속성\n  isLoading: 데이터 fetch 중이면 true, 아니면 false\n  data: fetcher 함수가 성공적으로 반환한 데이터\n  isError: fetcher 함수가 실패했을 때 true\n  error: fetcher 함수가 반환한 에러 객체\n  isFetching: 백그라운드에서 데이터를 다시 가져오는 중인지 나타냄\n  */\n\n  console.log(isLoading);\n  console.log(data);\n\n  return (\n    <Container>\n      <Header>\n        <Title>pompompurin</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{ pathname: `/${coin.id}`, state: { name: coin.name } }}\n              >\n                <Img\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id}.png`}\n                ></Img>\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}